# This workflow installs the latest version of Terraform CLI and configures the Terraform CLI configuration file
# with an API token for Terraform Cloud (app.terraform.io). On pull request events, this workflow will run
# `terraform init`, `terraform fmt`, and `terraform plan` (speculative plan via Terraform Cloud). On push events
# to the "main" branch, `terraform apply` will be executed.
#
# Documentation for `hashicorp/setup-terraform` is located here: https://github.com/hashicorp/setup-terraform
#
# To use this workflow, you will need to complete the following setup steps.
#
# 1. Create a `main.tf` file in the root of this repository with the `remote` backend and one or more resources defined.
#   Example `main.tf`:
#     # The configuration for the `remote` backend.
#     terraform {
#       backend "remote" {
#         # The name of your Terraform Cloud organization.
#         organization = "example-organization"
#
#         # The name of the Terraform Cloud workspace to store Terraform state files in.
#         workspaces {
#           name = "example-workspace"
#         }
#       }
#     }
#
#     # An example resource that does nothing.
#     resource "null_resource" "example" {
#       triggers = {
#         value = "A example resource that does nothing!"
#       }
#     }
#
#
# 2. Generate a Terraform Cloud user API token and store it as a GitHub secret (e.g. TF_API_TOKEN) on this repository.
#   Documentation:
#     - https://www.terraform.io/docs/cloud/users-teams-organizations/api-tokens.html
#     - https://help.github.com/en/actions/configuring-and-managing-workflows/creating-and-storing-encrypted-secrets
#
# 3. Reference the GitHub secret in step using the `hashicorp/setup-terraform` GitHub Action.
#   Example:
#     - name: Setup Terraform
#       uses: hashicorp/setup-terraform@v1
#       with:
#         cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

name: 'Terraform_Deploy_Kanchi'
 
on:
  push:
    branches: [ "main" ]
  pull_request:
 
permissions:
  id-token: write
  contents: read
  pull-requests: write
 
jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: "${{ secrets.AZURE_AD_CLIENT_ID }}"
      ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_AD_MVP_SUBSCRIPTION }}"
      ARM_TENANT_ID: "${{ secrets.AZURE_AD_TENANT_ID }}"
      ARM_CLIENT_SECRET: "${{ secrets.AZURE_AD_CLIENT_SECRET }}"
      storage_name: "${{ secrets.STORAGE_NAME }}"
      container_name: "${{ secrets.CONTAINER_NAME }}"
      key: "${{ secrets.VALUE_KEY }}"
    defaults:
      run:
        shell: bash
 
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        token: ${{secrets.GITHUB_TOKEN}}
 
    - name: List Files in Terraform Directory
      run: |
        ls -R ./Infra_creation
 
    - name: Print Current Working Directory
      run: |
        pwd
    - name: Debug Secrets
      run: |
        echo "Storage Name: ${{ secrets.STORAGE_NAME }}"
        echo "Container Name: ${{ secrets.CONTAINER_NAME }}"
        echo "Key: ${{ secrets.KEY }}"
    #- name: Setup Terraform
    #  uses: hashicorp//terraform-github-actions@master
    #  with:
    #    terraform_wrapper: false
    #    cli_config_credentials_token: ${{ secrets.AZURE_CREDENTIALS }}
 
    - name: Terraform Format
      run: |
        terraform fmt -check ./terraform/Infra_creation
 
    - name: Terraform Init
      uses: hashicorp//terraform-github-actions@master
      with:
        tf_actions_version: 0.14.8
        tf_actions_working_dir: "./terraform/Infra_creation"
        tf_actions_subcommand: 'init'
 
    - name: Terraform Plan
      uses: hashicorp//terraform-github-actions@master
      with:
        tf_actions_version: 0.14.8
        tf_actions_working_dir: "./terraform/Infra_creation"
        tf_actions_subcommand: 'plan'
 
    - name: Terraform Apply
      uses: hashicorp//terraform-github-actions@master
      with:
        tf_actions_version: 0.14.8
        tf_actions_working_dir: "./terraform/Infra_creation"
        tf_actions_subcommand: 'apply'
     # run: terraform apply -auto-approve
